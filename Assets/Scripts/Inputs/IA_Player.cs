//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Inputs/IA_Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @IA_Player: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @IA_Player()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""IA_Player"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""88c844c7-d57c-4273-aa1e-98223d6ed98b"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""7f745ceb-d969-4a1c-b6a6-c6ca2dffdb4f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Consumable"",
                    ""type"": ""Value"",
                    ""id"": ""059df065-2b32-41db-abbc-8f9e5b1eccd3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""1fcd6a49-fa8d-43fa-85d7-7b4551da52cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stats"",
                    ""type"": ""Button"",
                    ""id"": ""0c312687-c71e-49c8-8f3c-8207a9959aeb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ClickInput"",
                    ""type"": ""Button"",
                    ""id"": ""259fd17d-e9b3-4c79-a348-a96ca8f991aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QSpell"",
                    ""type"": ""Button"",
                    ""id"": ""0d2f6382-453b-413e-8aa9-f3ed6f45db13"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WSpell"",
                    ""type"": ""Button"",
                    ""id"": ""c5366e7d-9f51-4155-8716-6878ee660016"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESpell"",
                    ""type"": ""Button"",
                    ""id"": ""7d6e88ef-cd7f-424b-ae59-f8139abe311e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RSpell"",
                    ""type"": ""Button"",
                    ""id"": ""7fcb21eb-c16d-4105-abef-dd5bfa4be1dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""8f65f7e5-9c0a-408f-af2a-5d37586be61d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumable"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f411419b-0cf9-4c5d-b281-98352b9b99ef"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b0b9008d-5101-4f91-a946-ef4c0ac0d130"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a75ef723-b331-4c9b-9e61-289a9ef7d497"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b5a6731-2914-46c7-851c-537bcd678c85"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15494b9e-20c2-463f-9f5d-d17fd1cb060d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClickInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24059ca2-3592-4cba-a0d5-e53794ee2df4"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5f4c972-41f3-4854-8adc-68a6caab6175"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stats"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a82a0ce6-7a95-46ed-a595-bbbb5d7e1f92"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbb65468-89a0-41b0-a5f3-adb8633ce6ca"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53595f5a-fb14-454f-af1d-b7f7364deb54"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_Consumable = m_Player.FindAction("Consumable", throwIfNotFound: true);
        m_Player_Inventory = m_Player.FindAction("Inventory", throwIfNotFound: true);
        m_Player_Stats = m_Player.FindAction("Stats", throwIfNotFound: true);
        m_Player_ClickInput = m_Player.FindAction("ClickInput", throwIfNotFound: true);
        m_Player_QSpell = m_Player.FindAction("QSpell", throwIfNotFound: true);
        m_Player_WSpell = m_Player.FindAction("WSpell", throwIfNotFound: true);
        m_Player_ESpell = m_Player.FindAction("ESpell", throwIfNotFound: true);
        m_Player_RSpell = m_Player.FindAction("RSpell", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_Consumable;
    private readonly InputAction m_Player_Inventory;
    private readonly InputAction m_Player_Stats;
    private readonly InputAction m_Player_ClickInput;
    private readonly InputAction m_Player_QSpell;
    private readonly InputAction m_Player_WSpell;
    private readonly InputAction m_Player_ESpell;
    private readonly InputAction m_Player_RSpell;
    public struct PlayerActions
    {
        private @IA_Player m_Wrapper;
        public PlayerActions(@IA_Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @Consumable => m_Wrapper.m_Player_Consumable;
        public InputAction @Inventory => m_Wrapper.m_Player_Inventory;
        public InputAction @Stats => m_Wrapper.m_Player_Stats;
        public InputAction @ClickInput => m_Wrapper.m_Player_ClickInput;
        public InputAction @QSpell => m_Wrapper.m_Player_QSpell;
        public InputAction @WSpell => m_Wrapper.m_Player_WSpell;
        public InputAction @ESpell => m_Wrapper.m_Player_ESpell;
        public InputAction @RSpell => m_Wrapper.m_Player_RSpell;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @Consumable.started += instance.OnConsumable;
            @Consumable.performed += instance.OnConsumable;
            @Consumable.canceled += instance.OnConsumable;
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
            @Stats.started += instance.OnStats;
            @Stats.performed += instance.OnStats;
            @Stats.canceled += instance.OnStats;
            @ClickInput.started += instance.OnClickInput;
            @ClickInput.performed += instance.OnClickInput;
            @ClickInput.canceled += instance.OnClickInput;
            @QSpell.started += instance.OnQSpell;
            @QSpell.performed += instance.OnQSpell;
            @QSpell.canceled += instance.OnQSpell;
            @WSpell.started += instance.OnWSpell;
            @WSpell.performed += instance.OnWSpell;
            @WSpell.canceled += instance.OnWSpell;
            @ESpell.started += instance.OnESpell;
            @ESpell.performed += instance.OnESpell;
            @ESpell.canceled += instance.OnESpell;
            @RSpell.started += instance.OnRSpell;
            @RSpell.performed += instance.OnRSpell;
            @RSpell.canceled += instance.OnRSpell;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @Consumable.started -= instance.OnConsumable;
            @Consumable.performed -= instance.OnConsumable;
            @Consumable.canceled -= instance.OnConsumable;
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
            @Stats.started -= instance.OnStats;
            @Stats.performed -= instance.OnStats;
            @Stats.canceled -= instance.OnStats;
            @ClickInput.started -= instance.OnClickInput;
            @ClickInput.performed -= instance.OnClickInput;
            @ClickInput.canceled -= instance.OnClickInput;
            @QSpell.started -= instance.OnQSpell;
            @QSpell.performed -= instance.OnQSpell;
            @QSpell.canceled -= instance.OnQSpell;
            @WSpell.started -= instance.OnWSpell;
            @WSpell.performed -= instance.OnWSpell;
            @WSpell.canceled -= instance.OnWSpell;
            @ESpell.started -= instance.OnESpell;
            @ESpell.performed -= instance.OnESpell;
            @ESpell.canceled -= instance.OnESpell;
            @RSpell.started -= instance.OnRSpell;
            @RSpell.performed -= instance.OnRSpell;
            @RSpell.canceled -= instance.OnRSpell;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnConsumable(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnStats(InputAction.CallbackContext context);
        void OnClickInput(InputAction.CallbackContext context);
        void OnQSpell(InputAction.CallbackContext context);
        void OnWSpell(InputAction.CallbackContext context);
        void OnESpell(InputAction.CallbackContext context);
        void OnRSpell(InputAction.CallbackContext context);
    }
}
